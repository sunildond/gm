<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
          <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere"/>
          <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
          <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
          <section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="WindowsAutoCompleteEx.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <connectionStrings>
    <add name="Library_Management.Properties.Settings.LibraryConnectionString" connectionString="Data Source=ABHISOFT-C41883;Initial Catalog=Library;User ID=sa" providerName="System.Data.SqlClient" />
    
  </connectionStrings>  
  <appSettings>
    <!--<add key="wwconnectionstring" value="data source=192.168.0.157;initial catalog=gm;persist security info=true;user id=sa;password=sa123!@#" />-->
    <!--<add key="ConnectionString" value="data source=192.168.0.199;database=amar;Connect Timeout=80;user id=sa;password='sa'" />-->
    <!--<add key="ConnectionString" value="Data Source=GANESH\SQLEXPRESS;Initial Catalog=AMAR;Integrated Security=True" />-->
    <!-- <add key="wwConnectionString" value="Data Source=ADMIN-BB243EE30;Initial Catalog=gm;Integrated Security=True" /> -->
    <!--<add key="wwConnectionString" value="Data Source=MAN\SQLEXPRESS;Initial Catalog=gm;Integrated Security=True" />-->
    <!--<add key="wwConnectionString" value="Data Source=DELL-PC;Initial Catalog=gm;Integrated Security=True" />-->
    <!--<add key="wwConnectionString" value="Data Source=SHANKAR-A05B013;Initial Catalog=gm;Integrated Security=True" />-->
	  <!-- ittech live database  -->
     <!--<add key="wwConnectionString" value="Data Source=70.87.28.215;User Id=gm456;Password=admin@123" />--><!-- ittech live database  -->
    
	  <!--<add key="wwconnectionstring" value="data source=192.168.1.133;initial catalog=GmLive_18_10_2012;persist security info=true;user id=sa;password=gm@123#" />-->
	  <add key="1" value="data source=192.168.1.133;initial catalog=GmLive_18_10_2012;persist security info=true;user id=sa;password=gm@123#" /> <!--2012-2013-->
	  <add key="2" value="data source=192.168.1.133;initial catalog=GmLive_18_10_2012;persist security info=true;user id=sa;password=gm@123#" /> <!--2013-2014-->
	  <!-- above connection Glenmark  live database  -->
  
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <add key ="ServerPath" value="\\192.168.1.133\\order copy\\OrderCopy\\" />
    <!--  <add key="IOMReport" value="select oh.IOMNo,oh.IOMDate,oh.OrderAuthoDate, oh.PartyCode,oh.PartyName, oh.DSM_ZSM,oh.DispThrough,oh.InstPONo,oh.InstPODate,oh.OrderRecieveDate,oh.OrderDeliveryDate,
oh.Schedule,(case when oh.Institution is not null then (select Name from InstitutionMaster where oh.Institution = InstitutionMaster.Code) end) Institution,
(case when oh.SubInstitution is not null then (select Name from SubInstitutionMaster where oh.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution,
oi.ProductCode,oi.ProductName,oi.Quantity,oi.BillingRate,oi.MRP,oi.EffTax,oi.ProdValue,oh.BillingAddress,oh.DeliveryAddress, sm.Name as Stamping,oh.DocFile1,
oh.MRP,oh.Lisioner,oh.Remark, 
(select SUBSTRING((select ', ' + Name from DOC_REQ_Master where Code in (select * from fnListToTable(oh.DocumentRequired)) for xml path('')),3,1000)) as DocumentRequired
from OrderHeader oh, OrderItem oi, StampingMaster sm where oh.IOMNo=oi.IOMNo and oh.StampingID=sm.StampingId and oh.Schedule = 'No'
union all
select oh.IOMNo,oh.IOMDate,oh.OrderAuthoDate, oh.PartyCode,oh.PartyName, oh.DSM_ZSM,oh.DispThrough,oh.InstPONo,oh.InstPODate,oh.OrderRecieveDate,sd.ScheduleDate as OrderDeliveryDate,
oh.Schedule,(case when oh.Institution is not null then (select Name from InstitutionMaster where oh.Institution = InstitutionMaster.Code) end) Institution,
(case when oh.SubInstitution is not null then (select Name from SubInstitutionMaster where oh.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution,
oi.ProductCode,oi.ProductName,sd.OrderQuantity,oi.BillingRate,oi.MRP,oi.EffTax,oi.ProdValue,oh.BillingAddress,oh.DeliveryAddress, sm.Name as Stamping,oh.DocFile1,
oh.MRP,oh.Lisioner,oh.Remark, (select SUBSTRING((select ', ' + Name from DOC_REQ_Master where Code in (select * from fnListToTable(oh.DocumentRequired)) for xml path('')),3,1000)) as DocumentRequired 
from OrderHeader oh, OrderItem oi, ScheduleDetail sd, StampingMaster sm where oh.IOMNo=oi.IOMNo and oh.StampingID=sm.StampingId
and oh.Schedule = 'Yes'" />  -->


	  <add key="IOMReport" value="select OH.IOMNo,OH.IOMDate,CAST(OH.OrderAuthoDate as DATE) as AuthrisationDate, OH.PartyCode,OH.PartyName,OH.DSM_ZSM,OH.DispThrough,OH.InstPONo,OH.InstPODate , OH.OrderRecieveDate , 
OH.OrderDeliveryDate as DeliveryDate,OH.Schedule,OH.MRP as MRPyn,
(case when OH.Institution is not null then (select Name from InstitutionMaster 
where OH.Institution = InstitutionMaster.Code) end) Institution,
(case when OH.SubInstitution is not null then (select Name from SubInstitutionMaster 
where OH.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution,
OI.ProductCode AS MaterialCode , OI.ProductName,
oi.Quantity as OrderQuantity , OI.BillingRate ,OI.MRP ,OI.EffTax ,OI.ProdValue ,
OH.BillingAddress ,OH.DeliveryAddress,
(case when OH.StampingID is not null then (select Name from StampingMaster 
where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.DocFile1 ,OI.MRPPrint ,OH.Lisioner, OH.Remark, OH.DocumentRequired , OH.Authorised
from OrderHeader AS OH, OrderItem  as OI where  Oh.IOMNo =OI.IOMNo and OH.Schedule!='yes'
union all 
select OH.IOMNo,OH.IOMDate,CAST(OH.OrderAuthoDate as DATE) as AuthrisationDate,OH.PartyCode,OH.PartyName,OH.DSM_ZSM,OH.DispThrough,OH.InstPONo,OH.InstPODate , OH.OrderRecieveDate , 
sd.DeliveryDate,OH.Schedule,OH.MRP  as MRPyn ,
(case when OH.Institution is not null then (select Name from InstitutionMaster 
where OH.Institution = InstitutionMaster.Code) end) Institution,
(case when OH.SubInstitution is not null then (select Name from SubInstitutionMaster 
where OH.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution, 
SD.MaterialCode , OI.ProductName,
SD.OrderQuantity , OI.BillingRate ,OI.MRP ,OI.EffTax ,OI.ProdValue ,
OH.BillingAddress ,OH.DeliveryAddress,
(case when OH.StampingID is not null then (select Name from StampingMaster 
where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.DocFile1 ,OI.MRPPrint ,OH.Lisioner , OH.Remark ,  OH.DocumentRequired , OH.Authorised
from ScheduleDetail as SD,OrderHeader AS OH, OrderItem  as OI where 
SD.IOMNo=OH.IOMNo  AND OI.IOMNo =SD.IOMNo AND SD.MaterialCode = OI.ProductCode and OH.Schedule='yes' "/>

    <!--<add key="IOMReport" value="select OH.IOMNo,OH.IOMDate,CAST(OH.OrderAuthoDate as DATE) as AuthrisationDate, OH.PartyCode,OH.PartyName,OH.DSM_ZSM,OH.DispThrough,OH.InstPONo,OH.InstPODate , OH.OrderRecieveDate , 
OH.OrderDeliveryDate as DeliveryDate,OH.Schedule,OH.MRP as MRPyn,
(case when OH.Institution is not null then (select Name from InstitutionMaster where OH.Institution = InstitutionMaster.Code) end) Institution,
(case when OH.SubInstitution is not null then (select Name from SubInstitutionMaster where OH.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution,
OI.ProductCode AS MaterialCode , OI.ProductName,
oi.Quantity as OrderQuantity , OI.BillingRate ,OI.MRP ,OI.EffTax ,OI.ProdValue, 
(case when OH.PartyCode is not null then (select top 1 ltrim(rtrim(Street + ' ' + Street1 + ' ' + Street2 + ' ' + Street3 + ' ' + PostalCode)) as PartyBillingAddress from CustomerMaster where OH.PartyCode = CustomerMaster.CustomerCode) end) as BillingAddress
,OH.DeliveryAddress,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.DocFile1, OI.MRPPrint ,OH.Lisioner, OH.Remark, OH.DocumentRequired , OH.Authorised
from OrderHeader AS OH, OrderItem  as OI where  Oh.IOMNo =OI.IOMNo and OH.Schedule!='yes'
union all 
select OH.IOMNo,OH.IOMDate,CAST(OH.OrderAuthoDate as DATE) as AuthrisationDate,OH.PartyCode,OH.PartyName,OH.DSM_ZSM,OH.DispThrough,OH.InstPONo,OH.InstPODate , OH.OrderRecieveDate , 
sd.DeliveryDate,OH.Schedule,OH.MRP as MRPyn,
(case when OH.Institution is not null then (select Name from InstitutionMaster where OH.Institution = InstitutionMaster.Code) end) Institution,
(case when OH.SubInstitution is not null then (select Name from SubInstitutionMaster where OH.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution, 
SD.MaterialCode , OI.ProductName, SD.OrderQuantity, OI.BillingRate, OI.MRP, OI.EffTax, OI.ProdValue, 
(case when OH.PartyCode is not null then (select top 1 ltrim(rtrim(Street + ' ' + Street1 + ' ' + Street2 + ' ' + Street3 + ' ' + PostalCode)) as PartyBillingAddress from CustomerMaster where OH.PartyCode = CustomerMaster.CustomerCode) end) as BillingAddress
,OH.DeliveryAddress,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.DocFile1, OI.MRPPrint, OH.Lisioner, OH.Remark, OH.DocumentRequired, OH.Authorised
from ScheduleDetail as SD,OrderHeader AS OH, OrderItem  as OI where 
SD.IOMNo=OH.IOMNo  AND OI.IOMNo =SD.IOMNo AND SD.MaterialCode = OI.ProductCode and OH.Schedule='yes'" />-->
	  
	  
	  
	  
    <add key="PendingReport" value="select oh.IOMNo, oh.IOMDate,oh.OrderAuthoDate,oh.OrderRecieveDate, oh.PartyCode,oh.PartyName,oh.Schedule,oh.DSM_ZSM,sd.DeliveryDate as DelDate, 
oh.DispThrough, oh.InstPONo, oh.InstPODate, (case when oh.Institution is not null then (select Name from InstitutionMaster where oh.Institution = InstitutionMaster.Code) end) Institution,
(case when oh.SubInstitution is not null then (select Name from SubInstitutionMaster where oh.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution,
ot.Reason as 'BatchAllocation Reason', ot.Remark as 'BatchAllocation Remark', ot.ProductName, sd.OrderQuantity as OrderQuantity, 
(sd.OrderQuantity - sd.BatchQuantity) as PendingQuantity, ot.BillingRate,ot.MRP  ,ot.ValuePerProd * (sd.OrderQuantity - sd.BatchQuantity) as PendingProductValue,
oh.BillingAddress,oh.DeliveryAddress, sm.Name as StampingName,oh.MRP  as MRPyn,oh.Lisioner as Liasoner, oh.Remark as OrderRemark, oh.Authorised,
(select SUBSTRING((select ', ' + Name from DOC_REQ_Master where Code in (select * from fnListToTable(oh.DocumentRequired)) for xml path('')),3,1000)) as DocumentRequired
from OrderHeader as oh ,OrderItem as ot,
ScheduleDetail as sd ,StampingMaster as sm where oh.IOMNo=ot.IOMNo and ot.IOMNo=sd.IOMNo and oh.Schedule='YES'
and (sd.OrderQuantity -sd.BatchQuantity) >0  and oh.StampingID=sm.StampingId  and ot.IsDeliveryCompleted=0
Union all
select oh.IOMNo, oh.IOMDate,oh.OrderAuthoDate,oh.OrderRecieveDate, oh.PartyCode,oh.PartyName,oh.Schedule,oh.DSM_ZSM,oh.OrderDeliveryDate as DelDate,
oh.DispThrough, oh.InstPONo, oh.InstPODate, (case when oh.Institution is not null then (select Name from InstitutionMaster where oh.Institution = InstitutionMaster.Code) end) Institution,
(case when oh.SubInstitution is not null then (select Name from SubInstitutionMaster where oh.SubInstitution = SubInstitutionMaster.Code) end) SubInstitution,
ot.Reason as 'BatchAllocation Reason', ot.Remark as 'BatchAllocation Remark', ot.ProductName, ot.Quantity as OrderQuantity, 
(ot.Quantity - ot.BatchQuantity) as PendingQuantity, ot.BillingRate,ot.MRP,ot.ValuePerProd * (ot.Quantity - ot.BatchQuantity) as PendingProductValue,
oh.BillingAddress,oh.DeliveryAddress,sm.Name as StampingName,oh.MRP   as MRPyn ,oh.Lisioner as Liasoner, oh.Remark as OrderRemark, oh.Authorised,
(select SUBSTRING((select ', ' + Name from DOC_REQ_Master where Code in (select * from fnListToTable(oh.DocumentRequired)) for xml path('')),3,1000)) as DocumentRequired
from OrderHeader as oh ,OrderItem as ot ,
StampingMaster as sm where oh.IOMNo=ot.IOMNo and oh.Schedule='No' and (ot.Quantity -ot.BatchQuantity) >0 
and oh.StampingID=sm.StampingId and ot.IsDeliveryCompleted=0" />
    
    <!--<add key="STNDispatch" value="SELECT id.Delivery as STNNo, id.BillingDocument as INVNo, su.IOMNo,oh.IOMDate, oh.PartyCode,oh.PartyName,oh.LocationCode, oh.DSM_ZSM, 
oh.DispThrough, id.HORemarks,id.AuthDate, id.InvTransporter as Transpoter,id.InvLRNo as LRNo,id.InvDispLRdate as LRDate,
id.InvDispDelDate as DelDate,oh.BillingAddress,
(case when oh.StampingID is not null then (select Name from StampingMaster where oh.StampingID = StampingMaster.StampingId) end) SubInstitution,
oh.MRP from STNUpload su, OrderHeader oh, Invoice_Dispatch id where oh.IOMNo=su.IOMNO and oh.IOMNo=id.IOMNO
and su.Delivery != '' and su.OrdUpdated=1" />-->
	  <add key="STNDispatch" value="SELECT id.Delivery as STNNo, id.BillingDocument as INVNo, su.IOMNo,oh.IOMDate, oh.PartyCode,oh.PartyName,
         (case when oh.LocationCode is not null then (select DispatchThru from LocationMaster where LocationMaster.LocationCode=oh.LocationCode) end) as LocationCode, 
(case when su.Plnt is not null then (select DispatchThru from LocationMaster where LocationMaster.LocationCode=su.Plnt) end) as STNLocation, 
         oh.DSM_ZSM, oh.DispThrough, id.HORemarks,id.AuthDate, id.InvTransporter as Transpoter,id.InvLRNo as LRNo,id.InvDispLRdate as LRDate,
id.InvDispDelDate as DelDate,oh.BillingAddress,
(case when oh.StampingID is not null then (select Name from StampingMaster where oh.StampingID = StampingMaster.StampingId) end) SubInstitution,
oh.MRP, id.Cases from STNUpload su, OrderHeader oh, Invoice_Dispatch id where oh.IOMNo=su.IOMNO and oh.IOMNo=id.IOMNO
and su.Delivery != '' and su.OrdUpdated=1" />


	  <add key="InvoiceDispatchWithProduct" value="select    SI.STNIOMNo as IOMNo,SI.IOMNo as STN_DeliveryNo, SI.STNBillingDocument , SI.BillingDocument as Sapbilldoc,  

SI.BillingDate as SAPInvoiceBillingDate,InvDis.HORemarks, 

InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.BillingDocument, SI.SoldToParty, sI.Name, oh.IOMDate,
SI.Plnt, SI.BillingDate, SI.MaterialCode, SI.Description, SI.BilledQuantity, SI.Batch, SI.Priority, SI.ActualBilledQuantity,
si.subtotal1, SI.Subtotal2, SI.Subtotal3, SI.Subtotal4, SI.Subtotal5, SI.ZST1, SI.ZEXDD, SI.ZMR1,
SI.ZSTK, SI.ZEXD, SI.Mfgdate, SI.ExpDate, SI.NRV from SAPInvoiceUpload as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.STNIOMNo =oh.IOMNo and InvDis.BillingDocument=SI.BillingDocument and
SI.BillingDocument IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0') 
union all
select  SI.IOMNo as SAPIOMNo,  0 AS  STN_DeliveryNo,0 as STNBillingDocument,SI.BillingDocument as   Sapbilldoc,  

SI.BillingDate as SAPInvoiceBillingDate,InvDis.HORemarks, 

InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.BillingDocument, SI.SoldToParty, sI.Name, oh.IOMDate,
SI.Plnt, SI.BillingDate, SI.MaterialCode, SI.Description, SI.BilledQuantity, SI.Batch, SI.Priority, SI.ActualBilledQuantity,
si.subtotal1, SI.Subtotal2, SI.Subtotal3, SI.Subtotal4, SI.Subtotal5, SI.ZST1, SI.ZEXDD, SI.ZMR1,
SI.ZSTK, SI.ZEXD, SI.Mfgdate, SI.ExpDate, SI.NRV from DirSAPInvoiceUpload as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and InvDis.BillingDocument=SI.BillingDocument and
SI.BillingDocument IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0') 

" />





	  <add key="IBSDispatchWithProduct" value="select	 SI.STNIOMNo as IOMNo,SI.IOMNo as STN_DeliveryNo, SI.STNBillingDocument,SI.DocumentNumber,InvDis.HORemarks, 

InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.DocumentNumber, SI.PartyCode,oh.PartyName, sI.ProductName, oh.IOMDate,
SI.Location,  SI.MaterialCode, SI.BilledQuantity, SI.Batch,  
si.UED, SI.Team, SI.DiscPrice, SI.ExciseDuty, SI.LR_DT, SI.LR_NO, SI.LR_DT, SI.TRANSPORTER_ID,
SI.TRANSPORTER_NAME, SI.NRV, SI.NRV from IBISBillingUpdate as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.STNIOMNo =oh.IOMNo and SI.DocumentNumber=InvDis.BillingDocument and
SI.DocumentNumber IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')

 union all

select	SI.IOMNo as IOMNo,0 as STN_DeliveryNo, 0 as STNBillingDocument,SI.DocumentNumber, InvDis.HORemarks, 

InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.DocumentNumber, SI.PartyCode,oh.PartyName, sI.ProductName, oh.IOMDate,
SI.Location,  SI.MaterialCode, SI.BilledQuantity, SI.Batch,  
si.UED, SI.Team, SI.DiscPrice, SI.ExciseDuty, SI.LR_DT, SI.LR_NO, SI.LR_DT, SI.TRANSPORTER_ID,
SI.TRANSPORTER_NAME, SI.NRV, SI.NRV from IBISDirectBillingUpdate as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and SI.DocumentNumber=InvDis.BillingDocument and
SI.DocumentNumber IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')
" />
    
    <add key ="SAPDirectInvoiceWithProduct" value="select  SI.IOMNo as SAPIOMNo,SI.BillingDate as SAPInvoiceBillingDate,InvDis.HORemarks, InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.BillingDocument, SI.SoldToParty, sI.Name, oh.IOMDate,
SI.Plnt, SI.BillingDate, SI.MaterialCode, SI.Description, SI.BilledQuantity, SI.Batch, SI.Priority, SI.ActualBilledQuantity,
si.subtotal1, SI.Subtotal2, SI.Subtotal3, SI.Subtotal4, SI.Subtotal5, SI.ZST1, SI.ZEXDD, SI.ZMR1,
SI.ZSTK, SI.ZEXD, SI.Mfgdate, SI.ExpDate, SI.NRV from DirSAPInvoiceUpload as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and oh.IOMNo = InvDis.IOMNO and
SI.BillingDocument IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')
and InvDis.BillingDocument != '0'"/>



	  <add key ="IBISDirectBillingUpdateWithProduct" value="select	  SI.IOMNo as SAPIOMNo,InvDis.HORemarks, InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.DocumentNumber, SI.PartyCode, sI.ProductName, oh.IOMDate,
SI.Location,  SI.MaterialCode, SI.BilledQuantity, SI.Batch,  
si.UED, SI.Team, SI.DiscPrice, SI.ExciseDuty, SI.LR_DT, SI.LR_NO, SI.LR_DT, SI.TRANSPORTER_ID,
SI.TRANSPORTER_NAME, SI.NRV, SI.NRV from IBISDirectBillingUpdate as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and oh.IOMNo = InvDis.IOMNO and
SI.DocumentNumber IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')
and InvDis.BillingDocument != '0'"/>


<!-- addenew query-->


    <add key="DeliveryDetailWithProduct" value="Drop table DeliveryDetailWithProduct;
select ROW_NUMBER() over (order by (select 1)) as PKNumber, * into DeliveryDetailWithProduct from (
select count(*) as cnt, oh.IOMNo , oh.IOMDate, oh.PartyCode, oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity as OrderQuantity,
STN.Plnt as FromLocation,STN.Delivery , STN.PartyCode as ToLocation, STN.Delivery as STNDeliveryNo,STN.BillingDocument as ProInv,STN.Description ,
sum(STN.DeliveryQuantity) as ActualQuantity,ID.InvTransporter as STNTransporter,
ID.InvLRNo as STNLRNo,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,SAPUPD.Plnt as INVPlnt,SAPUPD.BillingDocument as InvoiceNo,
SAPUPD.BillingDate as INVDate, SAPUPD.BilledQuantity as INVQuantity,
oh.StampingID ,oh.MRP
from OrderHeader oh,OrderItem oi, Invoice_Dispatch as ID,STNUpload AS STN ,SAPInvoiceUpload AS SAPUPD
where oh.IOMNo =oi.IOMNo and oi.IOMNo=STN.IOMNO and oi.AlisCode =STN .AlisCode and STN.IOMNO =ID.IOMNO and SAPUPD.STNIOMNo =oh.IOMNo
AND STN.Delivery =SAPUPD.IOMNo AND STN.AlisCode =SAPUPD.AlisCode AND ID.Delivery!=0
and STN.MaterialCode =SAPUPD.MaterialCode and ID.Delivery = SAPUPD.IOMNo and ID.Delivery in (select IOMNo from SAPInvoiceUpload)
group by oh.IOMNo , oh.IOMDate, oh.PartyCode, oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity,
STN.Plnt,STN.Delivery , STN.PartyCode, STN.Delivery,STN.BillingDocument,STN.Description ,
ID.InvTransporter,
ID.InvLRNo,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,SAPUPD.Plnt,SAPUPD.BillingDocument,
SAPUPD.BillingDate, SAPUPD.BilledQuantity,
oh.StampingID ,oh.MRP
union all
select count(*) as cnt ,oh.IOMNo , oh.IOMDate,oh.PartyCode , oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity as OrderQuantity,
sapupd.Plnt as FromLocation,0 as Delivery , oh.PartyCode as ToLocation, 0 as STNDeliveryNo,sapupd.BillingDocument as ProInv,sapupd.Description ,0 as ActualQuantity ,ID.InvTransporter as STNTransporter,
ID.InvLRNo as STNLRNo,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,SAPUPD.Plnt as INVPlnt,SAPUPD.BillingDocument as InvoiceNo,
SAPUPD.BillingDate as INVDate, SAPUPD.BilledQuantity as INVQuantity,
oh.StampingID ,oh.MRP
from OrderHeader oh,OrderItem oi, Invoice_Dispatch as ID,DirSAPInvoiceUpload AS SAPUPD
where ID.IOMNO =SAPUPD.IOMNo and SAPUPD.IOMNo =oh.IOMNo and oh.IOMNo =oi.IOMNo and
oi.AlisCode =SAPUPD.AlisCode and ID.Delivery!=0 and ID.IOMNO in (select IOMNo from DirSAPInvoiceUpload)
group by oh.IOMNo , oh.IOMDate,oh.PartyCode , oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity ,
sapupd.Plnt , oh.PartyCode ,sapupd.BillingDocument,sapupd.Description , ID.InvTransporter ,
ID.InvLRNo,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,SAPUPD.Plnt ,SAPUPD.BillingDocument ,
SAPUPD.BillingDate , SAPUPD.BilledQuantity ,
oh.StampingID ,oh.MRP
union all
select count(*) as cnt,oh.IOMNo , oh.IOMDate, oh.PartyCode, oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity as OrderQuantity,
STN.Plnt as FromLocation,STN.Delivery , STN.PartyCode as ToLocation, STN.Delivery as STNDeliveryNo,STN.BillingDocument as ProInv,STN.Description ,sum(STN.DeliveryQuantity) as ActualQuantity,ID.InvTransporter as STNTransporter,
ID.InvLRNo as STNLRNo,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,'' as INVPlnt,SAPUPD.DocumentNumber as InvoiceNo,
'' as INVDate, SAPUPD.BilledQuantity as INVQuantity,
oh.StampingID ,oh.MRP
from OrderHeader oh,OrderItem oi, Invoice_Dispatch as ID,STNUpload AS STN ,IBISBillingUpdate AS SAPUPD
where oh.IOMNo =oi.IOMNo and oi.IOMNo=STN.IOMNO and oi.AlisCode =STN .AlisCode and STN.IOMNO =ID.IOMNO and SAPUPD.STNIOMNo =oh.IOMNo
AND STN.Delivery =SAPUPD.IOMNo AND STN.AlisCode =SAPUPD.AlisCode AND ID.Delivery!=0 and STN.MaterialCode =SAPUPD.MaterialCode
and ID.Delivery = SAPUPD.IOMNo and ID.Delivery in (select IOMNO from IBISBillingUpdate)
group by oh.IOMNo , oh.IOMDate, oh.PartyCode, oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity ,
STN.Plnt ,STN.Delivery , STN.PartyCode , STN.Delivery ,STN.BillingDocument ,STN.Description ,STN.DeliveryQuantity ,ID.InvTransporter ,
ID.InvLRNo ,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,SAPUPD.DocumentNumber , SAPUPD.BilledQuantity ,
oh.StampingID ,oh.MRP
union all
select count(*) as cnt,oh.IOMNo, oh.IOMDate,oh.PartyCode , oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity as OrderQuantity,
'' as FromLocation,0 as Delivery , oh.PartyCode as ToLocation, 0 as STNDeliveryNo,'' as ProInv,sapupd.ProductName as Description,0 as ActualQuantity ,ID.InvTransporter as STNTransporter,
ID.InvLRNo as STNLRNo,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,'' as INVPlnt,SAPUPD.DocumentNumber as InvoiceNo,
'' as INVDate, SAPUPD.BilledQuantity as INVQuantity,
oh.StampingID ,oh.MRP
from OrderHeader oh,OrderItem oi, Invoice_Dispatch as ID,IBISDirectBillingUpdate AS SAPUPD
where ID.IOMNO =SAPUPD.IOMNo and SAPUPD.IOMNo =oh.IOMNo and oh.IOMNo =oi.IOMNo and
oi.AlisCode =SAPUPD.AlisCode and ID.Delivery!=0 and ID.IOMNO in (select IOMNo from IBISDirectBillingUpdate)
group by oh.IOMNo, oh.IOMNo , oh.IOMDate,oh.PartyCode , oh.PartyName , oh.DSM_ZSM ,oi.ProductName ,oi.Quantity ,
oh.PartyCode ,sapupd.ProductName ,ID.InvTransporter ,
ID.InvLRNo,ID.InvDispLRdate ,ID.Date ,ID.Cases ,ID.TentativeDel ,ID.AuthDate ,ID.HORemarks ,SAPUPD.DocumentNumber,
SAPUPD.BilledQuantity ,oh.StampingID ,oh.MRP
) as tbl;

update DeliveryDetailWithProduct set cnt = 1 where PKNumber in (
select PKID from (select COUNT(*) as countRow, min(PKNumber) as PKID,cnt from DeliveryDetailWithProduct where cnt !=1 group by cnt) as a
where a.countRow > 1);

update DeliveryDetailWithProduct set OrderQuantity= 0 , ActualQuantity=0 where cnt >1;

select * from DeliveryDetailWithProduct"/>











<add key="DeliveryDetailWithoutProduct" value="
	  select DISTINCT oh.IOMNo , CAST( oh.IOMDate AS DATE), oh.PartyCode, oh.PartyName , oh.DSM_ZSM ,
	  STN.Plnt as FromLocation, STN.PartyCode as ToLocation, STN.Delivery as STNDeliveryNo,
	  STN.BillingDocument as ProInv,CAST( STN.deliverydate AS DATE) AS STNDATE, STNDISP.InvTransporter as STNTransporter,
	  STNDISP.InvLRNo as STNLRNo,STNDISP.InvTransporter as STNTransporter, CAST(STNDISP.InvDispLRdate AS DATE) AS STNLTDATE,
	  CAST(STNDISP.Date AS DATE) AS STNDATE,STNDISP.Cases AS STNCASE,CAST(STNDISP.AuthDate as Date) AS STNAUTHDATE,STNDISP.HORemarks AS STNREMARK,
	  ID.InvTransporter AS INVTransporter,ID.InvLRNo AS INVLRNo, ID.InvTransporter AS INVTransporter,cast(ID.InvDispLRdate as date)  AS InvDispLRdate ,
	  CAST(ID.Date AS DATE) AS INVDATE ,ID.Cases AS INVCASES, CAST(ID.AuthDate as Date) AS STNAuthDate ,ID.HORemarks AS INVHORemarks ,SAPUPD.Plnt as INVPlnt,
	  SAPUPD.BillingDocument as InvoiceNo,
	  cast(SAPUPD.BillingDate AS Date)  as  INVDate,oh.StampingID ,oh.MRP
	  from OrderHeader oh,OrderItem oi, Invoice_Dispatch as ID,STNUpload AS STN ,SAPInvoiceUpload AS SAPUPD, STNInvoice_Dispatch as STNDISP
	  where oh.IOMNo =oi.IOMNo and oi.IOMNo=STN.IOMNO and STN.IOMNO =ID.IOMNO and SAPUPD.STNIOMNo =oh.IOMNo and ID.IOMNO=STNDISP.IOMNO
	  AND STN.Delivery =SAPUPD.IOMNo AND STN.AlisCode =SAPUPD.AlisCode AND ID.Delivery!=0 AND STNDISP.BillingDocument != '0'
	  and ID.Delivery = SAPUPD.IOMNo and ID.Delivery in (select IOMNo from SAPInvoiceUpload) 
	  union all
	  select DISTINCT oh.IOMNo ,  cast( oh.IOMDate as Date ) ,oh.PartyCode, oh.PartyName , oh.DSM_ZSM ,
	  SAPUPD.plnt as FromLocation, '' as ToLocation, '' as STNDeliveryNo,'' as ProInv,
	  '' aS STNDATE, '' as STNTransporter,'' as STNLRNo,'' as STNTransporter,
	  '' AS STNLTDATE,'' AS STNDATE,'' AS STNCASE,'' AS STNAUTHDATE,
	  '' AS STNREMARK, ID.InvTransporter AS INVTransporter,ID.InvLRNo AS INVLRNo, '' AS INVTransporter,
	  cast(ID.InvDispLRdate as date) AS InvDispLRdate ,CAST(ID.Date as date )AS INVDATE ,ID.Cases AS INVCASES,CAST(ID.AuthDate as date) AS INVAuthDate, ID.HORemarks AS INVHORemarks,
	  SAPUPD.Plnt as INVPlnt,SAPUPD.BillingDocument as InvoiceNo,
	  CAST(SAPUPD.BillingDate as date) as INVDate,oh.StampingID ,oh.MRP
	  from OrderHeader oh,OrderItem oi, Invoice_Dispatch as ID,DirSAPInvoiceUpload AS SAPUPD
	  where oh.IOMNo =oi.IOMNo and SAPUPD.IOMNo=oh.IOMNo AND
	  SAPUPD.IOMNo= ID.IOMNO and ID.Delivery !=0
	  and ID.Delivery in (select delivery from DirSAPInvoiceUpload)"/>

  <add key="InvoiceDetailWithoutProduct" value="select distinct OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
STNUPD.PartyCode as STNDispThrough, 
(case when STNUPD.Plnt is not null then (select DispatchThru from LocationMaster where STNUPD.Plnt = LocationMaster.LocationCode) end) STNLocation,
OH.DispThrough ,OH.Remark,
 STNDISP.HORemarks as STNRemark, STNUPD.Delivery AS STNNO, 
STNUPD.BillingDocument as ProfInvoice, STNUPD.ActualGoodsMovement as STNDate,
STNDISP.InvTransporter AS STNTRANSPORTER, STNDISP.InvLRNo  AS STNLRNO,
STNDISP.InvDispLRdate AS STNDISPLRDATE, STNDISP.InvDispDelDate AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark, INVOICE.BillingDocument AS INVOICE, INVOICE.BillingDate as InvoiceDate, INVOICE.InvTransporter, 
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate   , STNDISP.CFARemarks as STNCWHRemark, INVOICE.CFARemarks as INVCFARemark 
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD, Invoice_Dispatch as INVOICE
 where  STNDISP.IOMNO =OH.IOMNo    AND STNDISP.Delivery = STNUPD.Delivery and 
 STNDISP.IOMNO =INVOICE.IOMNO and STNDISP.Delivery =INVOICE.Delivery 
 and INVOICE.BillingDocument in ( select BillingDocument from SAPInvoiceUpload )
 
union all
select  distinct OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
STNUPD.PartyCode as STNDispThrough, 
(case when STNUPD.Plnt is not null then (select DispatchThru from LocationMaster where STNUPD.Plnt = LocationMaster.LocationCode) end) STNLocation,
OH.DispThrough ,OH.Remark,
STNDISP.HORemarks as STNRemark, STNUPD.Delivery AS STNNO,
STNUPD.BillingDocument as ProfInvoice, STNUPD.ActualGoodsMovement as STNDate,
STNDISP.InvTransporter AS STNTRANSPORTER, STNDISP.InvLRNo  AS STNLRNO,
STNDISP.InvDispLRdate AS STNDISPLRDATE, STNDISP.InvDispDelDate AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark,INVOICE.BillingDocument AS INVOICE,INVOICE.BillingDate as InvoiceDate,INVOICE.InvTransporter,
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate , STNDISP.CFARemarks as STNCWHRemark, INVOICE.CFARemarks as INVCFARemark 
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD, Invoice_Dispatch as INVOICE
 where  STNDISP.IOMNO =OH.IOMNo AND STNDISP.Delivery = STNUPD.Delivery 
  and STNDISP.IOMNO =INVOICE.IOMNO and STNDISP.Delivery =INVOICE.Delivery 
  and INVOICE.BillingDocument in ( select DocumentNumber  from IBISBillingUpdate )
   
 UNION ALL    

select distinct OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
'' as STNDispThrough, '' as STNLocation,OH.DispThrough ,OH.Remark,
'' as STNRemark,'' AS STNNO,
'' as ProfInvoice, '' as STNDate,
'' AS STNTRANSPORTER, '' AS STNLRNO,
' ' AS STNDISPLRDATE, '' AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark,INVOICE.BillingDocument AS INVOICE,INVOICE.BillingDate as InvoiceDate,INVOICE.InvTransporter,
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate, '' as STNCWHRemark, INVOICE.CFARemarks as INVCFARemark  
FROM invoice_Dispatch AS INVOICE, OrderHeader as OH , DirSAPInvoiceUpload AS SAPDIR  
 WHERE INVOICE.IOMNO =OH.IOMNo AND SAPDIR.IOMNo =INVOICE.IOMNO AND INVOICE.BillingDocument = SAPDIR.BillingDocument 
 
 UNION ALL
select distinct OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
 '' as STNDispThrough, '' as STNLocation, OH.DispThrough ,OH.Remark,
'' as STNRemark,'' AS STNNO,
'' as ProfInvoice, '' as STNDate,
'' AS STNTRANSPORTER, '' AS STNLRNO,
' ' AS STNDISPLRDATE, '' AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark,INVOICE.BillingDocument AS INVOICE,INVOICE.BillingDate as InvoiceDate,INVOICE.InvTransporter,
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate , '' as STNCWHRemark, INVOICE.CFARemarks as INVCFARemark
 FROM invoice_Dispatch AS INVOICE, OrderHeader as OH , IBISDirectBillingUpdate AS  IBISDIR
 WHERE INVOICE.IOMNO =OH.IOMNo  AND IBISDIR.IOMNo =INVOICE.IOMNO AND INVOICE.BillingDocument = IBISDIR.DocumentNumber  
 
 UNION ALL
select distinct OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
STNUPD.PartyCode as STNDispThrough, 
(case when STNUPD.Plnt is not null then (select DispatchThru from LocationMaster where STNUPD.Plnt = LocationMaster.LocationCode) end) STNLocation,
OH.DispThrough ,OH.Remark,
STNDISP.HORemarks as STNRemark, STNUPD.Delivery AS STNNO,
STNUPD.BillingDocument as ProfInvoice, STNUPD.ActualGoodsMovement as STNDate,
STNDISP.InvTransporter AS STNTRANSPORTER, STNDISP.InvLRNo  AS STNLRNO,
STNDISP.InvDispLRdate AS STNDISPLRDATE, STNDISP.InvDispDelDate AS STNDISPELDATE,
'' as InvoiceDispatchRemark,'' as INVOICE, '' as InvoiceDate,'' as  InvTransporter, 
'' as InvLRNo, '' as InvDispLRdate, '' as InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,'' as Cases, '' as TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate, STNDISP.CFARemarks as STNCWHRemark, '' as INVCFARemark
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD
 where  STNDISP.IOMNO =OH.IOMNo  AND STNDISP.Delivery = STNUPD.Delivery   
  and stndisp.Delivery not in ( select iomno from SAPInvoiceUpload ) and STNDISP.Delivery  not in ( select IOMNo from IBISBillingUpdate )"/>


<!--  added 22_11_2012 -->

	  <add key="ProductWiseNotInvoiced" value="select OH.*,
STNUPD.Plnt AS FromLocation,STNUPD.PartyCode AS ToLocation,stnupd.BillingDocument as Proinv, stnupd.Description ,
STNUPD.Batch,STNUPD.DeliveryQuantity, STNUPD.ActualGoodsMovement ,STNDISP.*
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD
 where  STNDISP.IOMNO =OH.IOMNo  AND STNDISP.Delivery = STNUPD.Delivery   
  and stndisp.Delivery not in ( select iomno from SAPInvoiceUpload ) and STNDISP.Delivery  not in ( select IOMNo from IBISBillingUpdate )"/>

	  <add key="ProductWiseDir_INV_SAP_IBS" value="
SELECT OH.*,sapdir.IOMNO,sapdir.BillingDocument,sapdir.Soldtoparty, sapdir.Name as PartyName,
sapdir.MaterialCode ,sapdir.Batch,sapdir.BilledQuantity,sapdir.Subtotal1 as INVAMT,sapdir.AlisCode,INVOICE.* FROM invoice_Dispatch AS INVOICE, OrderHeader as OH , DirSAPInvoiceUpload AS SAPDIR  
 WHERE INVOICE.IOMNO =OH.IOMNo  AND SAPDIR.IOMNo =INVOICE.IOMNO AND INVOICE.BillingDocument = SAPDIR.BillingDocument 
 UNION ALL
SELECT OH.*,ibisdir.IOMNO,ibisdir.DocumentNumber  as BillingDocument,ibisdir.PartyCode  as Soldtoparty, ibisdir.AccountName as PartyName,
ibisdir.MaterialCode ,ibisdir.Batch,ibisdir.BilledQuantity,ibisdir.INVAMT,ibisdir.AlisCode ,INVOICE.* FROM invoice_Dispatch AS INVOICE, OrderHeader as OH , IBISDirectBillingUpdate AS  IBISDIR
 WHERE INVOICE.IOMNO =OH.IOMNo  AND IBISDIR.IOMNo =INVOICE.IOMNO AND INVOICE.BillingDocument = IBISDIR.DocumentNumber  
"/>

	  <add key="ProductInvoiceThroughSTNforSAP_IBS" value="select OH.*,
STNUPD.Plnt AS FromLocation,STNUPD.PartyCode AS ToLocation,stnupd.BillingDocument as Proinv, stnupd.Description ,
STNUPD.Batch,STNUPD.DeliveryQuantity, STNUPD.ActualGoodsMovement ,STNDISP.*,INVOICE.*
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD, Invoice_Dispatch as INVOICE
 where  STNDISP.IOMNO =OH.IOMNo    AND STNDISP.Delivery = STNUPD.Delivery 
  and STNDISP.IOMNO =INVOICE.IOMNO and STNDISP.Delivery =INVOICE.Delivery 
  and INVOICE.BillingDocument in ( select BillingDocument from SAPInvoiceUpload ) 
   union all
  select OH.*,
STNUPD.Plnt AS FromLocation,STNUPD.PartyCode AS ToLocation,stnupd.BillingDocument as Proinv, stnupd.Description ,
STNUPD.Batch,STNUPD.DeliveryQuantity, STNUPD.ActualGoodsMovement ,STNDISP.*,INVOICE.*
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD, Invoice_Dispatch as INVOICE
 where  STNDISP.IOMNO =OH.IOMNo  
  AND STNDISP.Delivery = STNUPD.Delivery 
  and STNDISP.IOMNO =INVOICE.IOMNO and STNDISP.Delivery =INVOICE.Delivery 
  and INVOICE.BillingDocument in ( select DocumentNumber  from IBISBillingUpdate )"/>


	  <add key="AllSqlMergeQuery" value="select OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
STNUPD.PartyCode as STNDispThrough, 
(case when STNUPD.Plnt is not null then (select DispatchThru from LocationMaster where STNUPD.Plnt = LocationMaster.LocationCode) end) STNLocation,
OH.DispThrough ,OH.Remark,STNUPD.MaterialCode , STNUPD.Description AS Productname ,
STNUPD.Batch ,STNUPD.DeliveryQuantity AS Quantity, STNDISP.HORemarks as STNRemark, STNUPD.Delivery AS STNNO, 
STNUPD.BillingDocument as ProfInvoice, STNUPD.ActualGoodsMovement as STNDate,
STNDISP.InvTransporter AS STNTRANSPORTER, STNDISP.InvLRNo  AS STNLRNO,
STNDISP.InvDispLRdate AS STNDISPLRDATE, STNDISP.InvDispDelDate AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark, INVOICE.BillingDocument AS INVOICE, INVOICE.BillingDate as InvoiceDate, INVOICE.InvTransporter, 
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate   
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD, Invoice_Dispatch as INVOICE
 where  STNDISP.IOMNO =OH.IOMNo    AND STNDISP.Delivery = STNUPD.Delivery  
 AND STNDISP.IOMNO =INVOICE.IOMNO and STNDISP.Delivery =INVOICE.Delivery 
 and INVOICE.BillingDocument in ( select BillingDocument from SAPInvoiceUpload ) 
 
union all
select OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
STNUPD.PartyCode as STNDispThrough, 
(case when STNUPD.Plnt is not null then (select DispatchThru from LocationMaster where STNUPD.Plnt = LocationMaster.LocationCode) end) STNLocation,
OH.DispThrough ,OH.Remark,STNUPD.MaterialCode ,STNUPD.Description AS Productname ,
STNUPD.Batch ,STNUPD.DeliveryQuantity AS Quantity, STNDISP.HORemarks as STNRemark, STNUPD.Delivery AS STNNO,
STNUPD.BillingDocument as ProfInvoice, STNUPD.ActualGoodsMovement as STNDate,
STNDISP.InvTransporter AS STNTRANSPORTER, STNDISP.InvLRNo  AS STNLRNO,
STNDISP.InvDispLRdate AS STNDISPLRDATE, STNDISP.InvDispDelDate AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark,INVOICE.BillingDocument AS INVOICE,INVOICE.BillingDate as InvoiceDate,INVOICE.InvTransporter,
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate 
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD, Invoice_Dispatch as INVOICE
 where  STNDISP.IOMNO =OH.IOMNo 
  AND STNDISP.Delivery = STNUPD.Delivery 
  and STNDISP.IOMNO =INVOICE.IOMNO and STNDISP.Delivery =INVOICE.Delivery 
  and INVOICE.BillingDocument in (select DocumentNumber  from IBISBillingUpdate)
   
 UNION ALL    

select OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
'' as STNDispThrough, '' as STNLocation,OH.DispThrough ,OH.Remark,SAPDIR.MaterialCode ,sapdir.Description  AS Productname, sapdir.Batch , sapdir.BilledQuantity AS Quantity , 
'' as STNRemark,'' AS STNNO,
'' as ProfInvoice, '' as STNDate,
'' AS STNTRANSPORTER, '' AS STNLRNO,
' ' AS STNDISPLRDATE, '' AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark,INVOICE.BillingDocument AS INVOICE,INVOICE.BillingDate as InvoiceDate,INVOICE.InvTransporter,
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate   FROM invoice_Dispatch AS INVOICE, OrderHeader as OH , DirSAPInvoiceUpload AS SAPDIR  
 WHERE INVOICE.IOMNO =OH.IOMNo  AND SAPDIR.IOMNo =INVOICE.IOMNO AND INVOICE.BillingDocument = SAPDIR.BillingDocument 
 
 UNION ALL
select OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
'' as STNDispThrough, '' as STNLocation, OH.DispThrough ,OH.Remark,IBISDIR.MaterialCode,IBISDIR.Productname, IBISDIR.Batch, IBISDIR.BilledQuantity AS Quantity , 
'' as STNRemark,'' AS STNNO,
'' as ProfInvoice, '' as STNDate,
'' AS STNTRANSPORTER, '' AS STNLRNO,
' ' AS STNDISPLRDATE, '' AS STNDISPELDATE,
INVOICE.HORemarks as InvoiceDispatchRemark,INVOICE.BillingDocument AS INVOICE,INVOICE.BillingDate as InvoiceDate,INVOICE.InvTransporter,
INVOICE.InvLRNo, INVOICE.InvDispLRdate, INVOICE.InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,INVOICE.Cases, INVOICE.TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate  
 FROM invoice_Dispatch AS INVOICE, OrderHeader as OH , IBISDirectBillingUpdate AS  IBISDIR
 WHERE INVOICE.IOMNO =OH.IOMNo  AND IBISDIR.IOMNo =INVOICE.IOMNO AND INVOICE.BillingDocument = IBISDIR.DocumentNumber  
 
 UNION ALL
select OH.IOMNo , oh.IOMDate,oh.PartyCode ,OH.PartyName,
(case when OH.LocationCode is not null then (select DispatchThru from LocationMaster where OH.LocationCode = LocationMaster.LocationCode) end) LocationCode,
STNUPD.PartyCode as STNDispThrough, 
(case when STNUPD.Plnt is not null then (select DispatchThru from LocationMaster where STNUPD.Plnt = LocationMaster.LocationCode) end) STNLocation,
OH.DispThrough ,OH.Remark,STNUPD.MaterialCode , STNUPD.Description AS Productname ,
STNUPD.Batch ,STNUPD.DeliveryQuantity AS Quantity, STNDISP.HORemarks as STNRemark, STNUPD.Delivery AS STNNO,
STNUPD.BillingDocument as ProfInvoice, STNUPD.ActualGoodsMovement as STNDate,
STNDISP.InvTransporter AS STNTRANSPORTER, STNDISP.InvLRNo  AS STNLRNO,
STNDISP.InvDispLRdate AS STNDISPLRDATE, STNDISP.InvDispDelDate AS STNDISPELDATE,
'' as InvoiceDispatchRemark,'' as INVOICE, '' as InvoiceDate, '' as  nvTransporter,
'' as InvLRNo, '' as InvDispLRdate, '' as InvDispDelDate,
(case when OH.StampingID is not null then (select Name from StampingMaster where OH.StampingID = StampingMaster.StampingId) end) StampingName,
OH.MRP,'' as Cases, '' as TentativeDel,
OH.BillingAddress,OH.DeliveryAddress,OH.OrderDeliveryDate
 from STNInvoice_Dispatch AS STNDISP, OrderHeader as OH, STNUpload AS STNUPD
 where  STNDISP.IOMNO =OH.IOMNo  AND STNDISP.Delivery = STNUPD.Delivery   
  and stndisp.Delivery not in ( select iomno from SAPInvoiceUpload ) and STNDISP.Delivery  not in ( select IOMNo from IBISBillingUpdate )" />


	  <!--

	  <add key ="IBISDirectBillingUpdateWithProduct" value="select	  SI.IOMNo as SAPIOMNo,InvDis.HORemarks, InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.DocumentNumber, SI.PartyCode, sI.ProductName, oh.IOMDate,
SI.Location,  SI.MaterialCode, SI.BilledQuantity, SI.Batch,  
si.UED, SI.Team, SI.DiscPrice, SI.ExciseDuty, SI.LR_DT, SI.LR_NO, SI.LR_DT, SI.TRANSPORTER_ID,
SI.TRANSPORTER_NAME, SI.NRV, SI.NRV from IBISDirectBillingUpdate as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and oh.IOMNo = InvDis.IOMNO and
SI.DocumentNumber IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')
and InvDis.BillingDocument != '0'"/>


    <add key ="IBISBillingUpdateWithProduct" value="select  SI.IOMNo as SAPIOMNo,InvDis.HORemarks, InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.DocumentNumber, SI.PartyCode, sI.ProductName, oh.IOMDate,
SI.Location,  SI.MaterialCode, SI.BilledQuantity, SI.Batch,  
si.UED, SI.Team, SI.DiscPrice, SI.ExciseDuty, SI.LR_DT, SI.LR_NO, SI.LR_DT, SI.TRANSPORTER_ID,
SI.TRANSPORTER_NAME, SI.NRV, SI.NRV from IBISBillingUpdate as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and oh.IOMNo = InvDis.IOMNO and
SI.DocumentNumber IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')
and InvDis.BillingDocument != '0'"/>  -->




	  <!--

	  <add key ="IBISDirectBillingUpdateWithProduct" value="select	  SI.IOMNo as SAPIOMNo,InvDis.HORemarks, InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.DocumentNumber, SI.PartyCode, sI.ProductName, oh.IOMDate,
SI.Location,  SI.MaterialCode, SI.BilledQuantity, SI.Batch,  
si.UED, SI.Team, SI.DiscPrice, SI.ExciseDuty, SI.LR_DT, SI.LR_NO, SI.LR_DT, SI.TRANSPORTER_ID,
SI.TRANSPORTER_NAME, SI.NRV, SI.NRV from IBISDirectBillingUpdate as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and oh.IOMNo = InvDis.IOMNO and
SI.DocumentNumber IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')
and InvDis.BillingDocument != '0'"/>


    <add key ="IBISBillingUpdateWithProduct" value="select  SI.IOMNo as SAPIOMNo,InvDis.HORemarks, InvDis.CFARemarks,InvDis.InvTransporter,InvDis.InvLRNo,InvDis.InvDispLRdate,
InvDis.InvDispDelDate,InvDis.ChequeNumber,InvDis.Amount,InvDis.Date,InvDis.DepositDate,InvDis.Cases,InvDis.TentativeDel,
SI.DocumentNumber, SI.PartyCode, sI.ProductName, oh.IOMDate,
SI.Location,  SI.MaterialCode, SI.BilledQuantity, SI.Batch,  
si.UED, SI.Team, SI.DiscPrice, SI.ExciseDuty, SI.LR_DT, SI.LR_NO, SI.LR_DT, SI.TRANSPORTER_ID,
SI.TRANSPORTER_NAME, SI.NRV, SI.NRV from IBISBillingUpdate as SI,  OrderHeader oh, Invoice_Dispatch InvDis
where SI.IOMNo =oh.IOMNo and oh.IOMNo = InvDis.IOMNO and
SI.DocumentNumber IN (SELECT BillingDocument FROM Invoice_Dispatch WHERE BillingDocument !='0')
and InvDis.BillingDocument != '0'"/>  -->
    
	  

  </appSettings>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>